name: Deploy to AWS
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        type: choice
        options:
          - production
          - development
        required: true

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ inputs.environment || 'development' }}
      cancel-in-progress: false
    environment:
      name: ${{ inputs.environment || 'development' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Run pnpm for root app
        run: pnpm install

      - name: Run pnpm in infra directory
        working-directory: ./infrastructure
        run: pnpm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Make safe for cdk docker build
        run: git config --global --add safe.directory /github/workspace

      - name: Install build-essentials
        run: |
          sudo apt-get update
          sudo apt-get -y install build-essential

      - name: Build app
        run: pnpm build

      - name: Deploy to Lambda
        run: pnpm exec cdk deploy -c config=${{ github.event.inputs.environment || 'development' }} --require-approval never
        working-directory: ./infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NODE_ENV: ${{ github.event.inputs.environment || 'development' }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
